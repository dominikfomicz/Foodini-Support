stages:
  - build


build:
  stage: build
  script:
    - npm install
    - npm run build-prod
    # - ng build --prod


    
#deploy:
#    stage: deploy
#    only:
#     - master
#    before_script:
#     - apt-get update -qy
#     - apt-get install lftp -y
#    script:
#     #- lftp -c "set ftp:ssl-allow no; open -u $FTP_USERNAME,$FTP_PASSWORD $HOST; mirror -Rev ./app && ./resources && ./routes /var/www/  --ignore-time --parallel=10 --exclude-glob .git* --exclude .git/ --exclude vendor/ --exclude composer.json"
#     - lftp -c "set ftp:ssl-allow no; open -u $FTP_USERNAME,$FTP_PASSWORD $HOST; mirror -Rev ./ /var/www/ --ignore-time --parallel=10 --exclude ./* --include app/* --include resources/* --include routes/*"

# stages:
#   - build
 
# build:
#   stage: build
  
#   before_script:
#   # Update packages
#   - apt-get update -yqq
#   # Prep for Node
#   - apt-get install gnupg -yqq
#   # Upgrade to Node 8
#   - curl -sL https://deb.nodesource.com/setup_8.x | bash -
#   # Install dependencies
#   - apt-get install git nodejs libcurl4-gnutls-dev libicu-dev libmcrypt-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libpq-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev -yqq
#   # Install Node dependencies.
#   # comment this out if you don't have a node dependency
#   - npm install

#   script:
#     - npm run production
#     # - ng build --prod
